---
import { getAbsoluteLocaleUrlList } from 'astro:i18n'
import { languages, getCurrentLanguage } from '../services/i18n'

const localeUrlList = getAbsoluteLocaleUrlList()
const currentLanguage = getCurrentLanguage(Astro.url.pathname)
---

<script>
  const toggleButton = document.getElementById('language-toggle')!
  const list = document.getElementById('language-list')!

  // メニューを開閉する
  toggleButton.addEventListener('click', () => {
    list.classList.toggle('hidden')
  })

  // 領域外クリックで閉じる
  document.addEventListener('click', (event) => {
    const target = event.target as HTMLElement
    if (!list.contains(target) && !toggleButton.contains(target)) {
      list.classList.add('hidden')
    }
  })
</script>

<div class="relative">
  <button
    type="button"
    id="language-toggle"
    class="w-full cursor-pointer rounded-md px-3 py-0.5 text-left text-white shadow-sm ring-1 ring-inset ring-gray-300 transition-all duration-200 focus:text-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6"
    aria-haspopup="listbox"
    aria-expanded="true"
    aria-labelledby="listbox-label"
  >
    {currentLanguage.label}
  </button>

  <ul
    class="absolute right-0 z-10 mt-1 hidden max-h-60 w-fit overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm"
    id="language-list"
    tabindex="-1"
    role="listbox"
    aria-labelledby="listbox-label"
    aria-activedescendant="listbox-option-3"
  >
    {
      localeUrlList.map((localeUrl, idx) => (
        <li
          class:list={[
            'block cursor-default select-none py-1 pl-4 pr-4 text-gray-900 hover:bg-slate-200',
            { 'font-bold': languages[idx].id === currentLanguage.id },
          ]}
          role="option"
        >
          <a href={localeUrl}>{languages[idx].label}</a>
        </li>
      ))
    }
  </ul>
</div>
