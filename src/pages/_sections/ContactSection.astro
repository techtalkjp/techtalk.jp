---
import Heading from '~/components/ui/Heading.astro'
import CoverPage from '~/components/CoverPage.astro'
import { useI18n } from '~/services/i18n'
import bgImage from '~/assets/images/contact.webp'
import Label from '~/components/ui/Label.astro'
import Input from '~/components/ui/Input.astro'

const { t } = useI18n(Astro.url.pathname)
---

<script>
  import { safeParse, flatten } from 'valibot'
  import { ContactFormSchema } from '../contact'

  let errors = {}

  const form = document.getElementById('contact-form')
  form?.addEventListener('submit', async (event: SubmitEvent) => {
    event.preventDefault()
    const formData = new FormData(event.target as HTMLFormElement)
    const validateResult = safeParse(ContactFormSchema, Object.fromEntries(formData.entries()))
    if (validateResult.success) {
      const response = await fetch('/contact', {
        method: 'POST',
        body: formData,
      })
      const result = await response.json()
    } else {
      errors = flatten(validateResult.issues).nested
      console.log(errors)
      const errorsElement = document.getElementById('errors')!
      errorsElement.innerHTML = Object.entries(errors)
        .map(([key, value]) => `<p>${key}: ${value}</p>`)
        .join('')
    }
  })
</script>

<CoverPage id="contact" bgImageSrc={bgImage}>
  <Heading>{t('contact.title', 'お問い合わせ')}</Heading>

  <form id="contact-form" action="/contact" method="post" class="mx-auto grid max-w-lg grid-cols-1 gap-x-4 gap-y-2">
    <Label for="name">
      {t('contact.name', 'お名前')}
      <Input type="text" class="block w-full" name="name" />
    </Label>

    <Label for="company">
      {t('contact.company', '会社名')}
      <Input type="tel" class="w-full" name="tel" />
    </Label>

    <Label>
      {t('contact.tel', '電話番号')}
      <Input type="tel" class="w-full" name="tel" />
    </Label>

    <Label>
      {t('contact.email', 'メールアドレス')}
      <Input type="email" class="w-full" name="email" />
    </Label>

    <Label>
      {t('contact.message', 'メッセージ')}
      <textarea
        rows="4"
        name="message"
        class="block w-full rounded-md border-0 bg-black bg-opacity-50 px-3 py-1.5 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
      ></textarea>
    </Label>

    <Label>
      <Input type="checkbox" class="mx-0.5 inline w-auto ring-0" name="privacy" />
      {t('contact.agree-to-the-privacy-policy', 'プライバシーポリシーに同意する')}
    </Label>

    <div id="errors"></div>

    <button
      class="w-full rounded-md bg-indigo-600 px-2.5 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
    >
      {t('contact.submit', '送信')}
    </button>
  </form>
</CoverPage>
